int	ft_calc_len(t_format *f, uintmax_t num, int numlen, base)
{
	int len;

	if (f->precision == -1 && num == 0)
		len = 0;
	else if (f->precision > numlen)
		len = f->precision;
	else
		len = numlen;
	if ((base == 8 || base == 16) && (f->hash && (num > 0 || f->precision == -1) && numlen >= f->precision))
		len += (base == 16) 2 : 1;
	if ((base == 8 || base == 16) && f->zero && f->min_width > len)
		len = format->min_width;
	return len;
}







	int base


	ft_update_optionals(**str, format);
	value = ft_cast_uint(ap, format);
	ptr = ft_ulltoa_base(value, base, (f->upper_case) ? 'A' : 'a'));
	ptr_len = (value != 0 || format->precision != -1) ? ft_strlen(ptr) : 0;
	f->len = ft_calc_len(format, value, ptr_len, base);
	padding = ft_maxnum(format->min_width - f->len, 0);
	ft_putpad(padding, format, format->minus == 0);
	ft_putzeroes(f, ptr_len, value, base)
	ft_putprefix(value, **str, format);
	write(1, ptr, ptr_len);
	ft_putpad(padding, format, format->minus == 1);
	*str += 1;
	free(ptr);
	f->len += padding;
}


ft_putprefix не делает ничего для uU


ft_putzeroes(f, ptr_len, value, base)
{
	int nzeros = 0;

	if (base == 8)
		nzeroes = f->len - ptr_len - ((f->hash && (value > 0 || f->precision == -1)) ? 1 : 0)
	else if (base == 16)
		nzeros = f->len - ptr_len - ((f->hash && value != 0) ? 2 : 0)
	else
		nzeros = format->precision - ptr_len
}
